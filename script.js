class ProfessionTest {
    constructor() {
        this.currentQuestion = 0;
        this.answers = [];
        this.questions = [
            "–ö–∞–∫–∏–µ —à–∫–æ–ª—å–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã –≤–∞–º –Ω—Ä–∞–≤—è—Ç—Å—è –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –∏ –ø–æ—á–µ–º—É?",
            "–û–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ –ª—é–±–∏–º—ã–µ —Ö–æ–±–±–∏ –∏ –∑–∞–Ω—è—Ç–∏—è –≤ —Å–≤–æ–±–æ–¥–Ω–æ–µ –≤—Ä–µ–º—è",
            "–ö–∞–∫–∏–µ –∑–∞–¥–∞—á–∏ –∏–ª–∏ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∑–∞—Å—Ç–∞–≤–ª—è—é—Ç –≤–∞—Å –∑–∞–±—ã—Ç—å –æ –≤—Ä–µ–º–µ–Ω–∏?",
            "–ß—Ç–æ –≤–∞–º –±–æ–ª—å—à–µ –Ω—Ä–∞–≤–∏—Ç—Å—è: —Ä–∞–±–æ—Ç–∞—Ç—å –≤ –∫–æ–º–∞–Ω–¥–µ –∏–ª–∏ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ? –ü–æ—á–µ–º—É?",
            "–û–ø–∏—à–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é, –∫–æ–≥–¥–∞ –≤—ã —É—Å–ø–µ—à–Ω–æ —Ä–µ—à–∏–ª–∏ —Å–ª–æ–∂–Ω—É—é –ø—Ä–æ–±–ª–µ–º—É",
            "–ö–∞–∫–∏–º–∏ –Ω–∞–≤—ã–∫–∞–º–∏ –∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—è–º–∏ –≤—ã –æ–±–ª–∞–¥–∞–µ—Ç–µ?",
            "–ö–∞–∫ –≤—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ—Å—å –∫ —Ä—É—Ç–∏–Ω–Ω–æ–π —Ä–∞–±–æ—Ç–µ?",
            "–ß—Ç–æ –¥–ª—è –≤–∞—Å –≤–∞–∂–Ω–æ –≤ –±—É–¥—É—â–µ–π –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ (–∑–∞—Ä–ø–ª–∞—Ç–∞, –∫–∞—Ä—å–µ—Ä–∞, –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏ —Ç.–¥.)?",
            "–û–ø–∏—à–∏—Ç–µ –≤–∞—à –∏–¥–µ–∞–ª—å–Ω—ã–π —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å",
            "–ö–∞–∫ –≤—ã —Å–ø—Ä–∞–≤–ª—è–µ—Ç–µ—Å—å —Å–æ —Å—Ç—Ä–µ—Å—Å–æ–º –∏ –¥–∞–≤–ª–µ–Ω–∏–µ–º?",
            "–ß—Ç–æ –≤–∞—Å –º–æ—Ç–∏–≤–∏—Ä—É–µ—Ç –∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç?",
            "–ö–∞–∫–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤ –∂–∏–∑–Ω–∏ –≤—ã–∑—ã–≤–∞—é—Ç —É –≤–∞—Å –Ω–∞–∏–±–æ–ª—å—à—É—é –≥–æ—Ä–¥–æ—Å—Ç—å?",
            "–ö–∞–∫ –≤—ã —É—á–∏—Ç–µ—Å—å –Ω–æ–≤–æ–º—É? –ß—Ç–æ –≤–∞–º –ø–æ–º–æ–≥–∞–µ—Ç –≤ –æ–±—É—á–µ–Ω–∏–∏?",
            "–û–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ —Å–∏–ª—å–Ω—ã–µ –∏ —Å–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã",
            "–ö–µ–º –≤—ã –≤–∏–¥–∏—Ç–µ —Å–µ–±—è —á–µ—Ä–µ–∑ 5 –ª–µ—Ç?"
        ];

        this.initializeApp();
    }

    initializeApp() {
        this.bindEvents();
        this.renderQuestions();
    }

    bindEvents() {
        document.getElementById('start-btn').addEventListener('click', () => this.startTest());
        document.getElementById('prev-btn').addEventListener('click', () => this.previousQuestion());
        document.getElementById('next-btn').addEventListener('click', () => this.nextQuestion());
        document.getElementById('submit-btn').addEventListener('click', (e) => this.submitTest(e));
        document.getElementById('restart-btn').addEventListener('click', () => this.restartTest());
    }

    renderQuestions() {
        const container = document.getElementById('questions-container');
        container.innerHTML = '';

        this.questions.forEach((question, index) => {
            const questionElement = document.createElement('div');
            questionElement.className = `question ${index === 0 ? 'active' : ''}`;
            questionElement.innerHTML = `
                <h3>–í–æ–ø—Ä–æ—Å ${index + 1} –∏–∑ ${this.questions.length}</h3>
                <p>${question}</p>
                <textarea 
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –æ—Ç–≤–µ—Ç –∑–¥–µ—Å—å..." 
                    rows="4"
                    data-index="${index}"
                >${this.answers[index] || ''}</textarea>
            `;
            container.appendChild(questionElement);
        });

        this.updateProgress();
    }

    startTest() {
        document.getElementById('intro-screen').classList.remove('active');
        document.getElementById('test-form').classList.add('active');
        this.showQuestion(0);
    }

    showQuestion(index) {
        document.querySelectorAll('.question').forEach((q, i) => {
            q.classList.toggle('active', i === index);
        });

        document.getElementById('prev-btn').style.display = index === 0 ? 'none' : 'block';
        document.getElementById('next-btn').style.display = index === this.questions.length - 1 ? 'none' : 'block';
        document.getElementById('submit-btn').style.display = index === this.questions.length - 1 ? 'block' : 'none';

        this.updateProgress();
    }

    updateProgress() {
        const progress = ((this.currentQuestion + 1) / this.questions.length) * 100;
        document.querySelector('.progress-fill').style.width = `${progress}%`;
        document.querySelector('.progress-text').textContent = 
            `–í–æ–ø—Ä–æ—Å ${this.currentQuestion + 1} –∏–∑ ${this.questions.length}`;
    }

    saveAnswer() {
        const textarea = document.querySelector(`textarea[data-index="${this.currentQuestion}"]`);
        if (textarea) {
            this.answers[this.currentQuestion] = textarea.value.trim();
        }
    }

    nextQuestion() {
        this.saveAnswer();
        
        if (this.currentQuestion < this.questions.length - 1) {
            this.currentQuestion++;
            this.showQuestion(this.currentQuestion);
        }
    }

    previousQuestion() {
        this.saveAnswer();
        
        if (this.currentQuestion > 0) {
            this.currentQuestion--;
            this.showQuestion(this.currentQuestion);
        }
    }

    async submitTest(e) {
        e.preventDefault();
        this.saveAnswer();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã answered
        const unanswered = this.answers.filter(answer => !answer || answer.trim() === '');
        if (unanswered.length > 0) {
            if (!confirm('–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã –æ—Å—Ç–∞–ª–∏—Å—å –±–µ–∑ –æ—Ç–≤–µ—Ç–∞. –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?')) {
                return;
            }
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –∑–∞–≥—Ä—É–∑–∫–∏
        document.getElementById('test-form').classList.remove('active');
        document.getElementById('loading-screen').classList.add('active');

        try {
            const analysis = await this.analyzeWithDeepSeek();
            this.showResults(analysis);
        } catch (error) {
            console.error('Error analyzing answers:', error);
            this.showResults(this.generateFallbackAnalysis());
        }
    }

    async analyzeWithDeepSeek() {
    try {
        // Netlify Function URL
        const response = await fetch('/.netlify/functions/analyze', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ 
                answers: this.answers 
            }),
        });

        const data = await response.json();
        return data.analysis || this.generateFallbackAnalysis();
        
    } catch (error) {
        console.error('Error:', error);
        return this.generateFallbackAnalysis();
    }
}

    generateAnalysis() {
        // –ê–Ω–∞–ª–∏–∑ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –≤ –æ—Ç–≤–µ—Ç–∞—Ö
        const allAnswers = this.answers.join(' ').toLowerCase();
        
        let analysis = "–ù–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤ —è –º–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è:\n\n";

        // –ê–Ω–∞–ª–∏–∑ –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤
        if (allAnswers.includes('–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ') || allAnswers.includes('–∫–æ–º–ø—å—é—Ç–µ—Ä') || allAnswers.includes('—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏')) {
            analysis += "üíª **IT-—Å—Ñ–µ—Ä–∞**: –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫, Data Scientist, IT-—Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç\n";
        }
        
        if (allAnswers.includes('–º–µ–¥–∏—Ü–∏–Ω–∞') || allAnswers.includes('–ª–µ—á–∏—Ç—å') || allAnswers.includes('–∑–¥–æ—Ä–æ–≤—å–µ')) {
            analysis += "üè• **–ú–µ–¥–∏—Ü–∏–Ω–∞**: –í—Ä–∞—á, –º–µ–¥—Å–µ—Å—Ç—Ä–∞, —Ñ–∞—Ä–º–∞—Ü–µ–≤—Ç\n";
        }
        
        if (allAnswers.includes('—É—á–∏—Ç—å') || allAnswers.includes('–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ') || allAnswers.includes('–ø—Ä–µ–ø–æ–¥–∞–≤–∞')) {
            analysis += "üìö **–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ**: –£—á–∏—Ç–µ–ª—å, –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å, –ø–µ–¥–∞–≥–æ–≥\n";
        }
        
        if (allAnswers.includes('–±–∏–∑–Ω–µ—Å') || allAnswers.includes('—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ') || allAnswers.includes('–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü')) {
            analysis += "üíº **–ë–∏–∑–Ω–µ—Å –∏ –º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç**: –ú–µ–Ω–µ–¥–∂–µ—Ä, –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å, —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å\n";
        }
        
        if (allAnswers.includes('—Ç–≤–æ—Ä—á') || allAnswers.includes('–∏—Å–∫—É—Å—Å—Ç–≤–æ') || allAnswers.includes('–¥–∏–∑–∞–π–Ω')) {
            analysis += "üé® **–¢–≤–æ—Ä—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏**: –î–∏–∑–∞–π–Ω–µ—Ä, —Ö—É–¥–æ–∂–Ω–∏–∫, –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä\n";
        }
        
        if (allAnswers.includes('–Ω–∞—É–∫–∞') || allAnswers.includes('–∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ') || allAnswers.includes('—ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç')) {
            analysis += "üî¨ **–ù–∞—É–∫–∞ –∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è**: –£—á–µ–Ω—ã–π, –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å, –ª–∞–±–æ—Ä–∞–Ω—Ç\n";
        }

        analysis += "\n**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è:**\n";
        analysis += "‚Ä¢ –ü—Ä–æ–π–¥–∏—Ç–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã\n";
        analysis += "‚Ä¢ –ü–æ—Å–µ—Ç–∏—Ç–µ –¥–Ω–∏ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –¥–≤–µ—Ä–µ–π –≤ –≤—É–∑–∞—Ö\n";
        analysis += "‚Ä¢ –ü–æ–æ–±—â–∞–π—Ç–µ—Å—å —Å –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è–º–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–π\n";
        analysis += "‚Ä¢ –†–∞–∑–≤–∏–≤–∞–π—Ç–µ –Ω–∞–≤—ã–∫–∏, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é\n\n";

        analysis += "–ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–±–æ—Ä –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏ - —ç—Ç–æ –≤–∞–∂–Ω—ã–π —à–∞–≥, –∏ –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ –±—É–¥—É—â–µ–º!";

        return analysis;
    }

    generateFallbackAnalysis() {
        return `–ù–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤ —è –≤–∏–∂—É —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å—ã –∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏. –í–æ—Ç –æ–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:

üîç **–î–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥—É—é:**

1. –ü—Ä–æ–π—Ç–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã
2. –ü–æ—Å–µ—Ç–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —Å –∫–∞—Ä—å–µ—Ä–Ω—ã–º –∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–º
3. –ü–æ–æ–±—â–∞—Ç—å—Å—è —Å –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è–º–∏ —Ä–∞–∑–Ω—ã—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–π
4. –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏ –≤ —Ä–∞–∑–Ω—ã—Ö —Å—Ñ–µ—Ä–∞—Ö

üí° **–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:**
- –°–æ—Å—Ç–∞–≤—å—Ç–µ —Å–ø–∏—Å–æ–∫ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–π
- –ò–∑—É—á–∏—Ç–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —ç—Ç–∏–º –ø—Ä–æ—Ñ–µ—Å—Å–∏—è–º
- –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ, –∫–∞–∫–∏–µ –Ω–∞–≤—ã–∫–∏ –≤–∞–º –Ω—É–∂–Ω–æ —Ä–∞–∑–≤–∏—Ç—å
- –ù–∞—á–Ω–∏—Ç–µ —Å –º–∞–ª–æ–≥–æ - –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –∫—É—Ä—Å—ã –∏–ª–∏ –≤–æ—Ä–∫—à–æ–ø—ã

–ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø—É—Ç—å –º–æ–∂–µ—Ç –º–µ–Ω—è—Ç—å—Å—è - —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ! –ì–ª–∞–≤–Ω–æ–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è –∏ –ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–æ–≤–æ–µ.`;
    }

    showResults(analysis) {
        document.getElementById('loading-screen').classList.remove('active');
        document.getElementById('results-screen').classList.add('active');
        document.getElementById('results-text').textContent = analysis;
    }

    restartTest() {
        this.currentQuestion = 0;
        this.answers = [];
        document.getElementById('results-screen').classList.remove('active');
        document.getElementById('test-form').classList.add('active');
        this.renderQuestions();
        this.showQuestion(0);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', () => {
    new ProfessionTest();
});
